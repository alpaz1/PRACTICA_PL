lista <entero> [2] m = {1,1};

lista <entero> [2] p = {1,{1}};

lista <lista <entero>[2]> [3] z = {{1}, {2}};

lista <lista <lista <entero>[2]>[2]> [3] w = {{{11}}, {{2}}};

lista <entero> [2] n = {verdad,1};

buleano g = mentira;
entero h = -1;
buleano f = (verdad == g);
buleano a = verdad oo mentira;
entero b = 3 - 1 + 5 * 6;
entero c = -b;
buleano d = no a - verdad;
entero e = c + b;


entero prueba(entero a, entero b, lista <lista <entero>[]>[] miArray){
    mientras (a == b){
        paraCada(entero i = 0; i < b; i = i + 1){
            b = b + 1;
        }
    }
    devuelve a;
}

entero funCall = prueba (b,b,z);
buleano funCall1 = prueba (b,b,z);


estructura Tiempo{
    entero hora;
    entero minuto;
    entero segundo;
    lista <entero> [2] n;

};

enum DiaSemana { Lunes, Martes, Miercoles, Jueves, Viernes, Sabado, Domingo};
enum Frutas { Manzana, Pera};

DiaSemana dia = 2;

lista <entero> [2] arrayTiempo = {h};




principal() {

    Tiempo t;
    t.segundo = 60;
    t.noExiste = 100;
    t.hora = verdad;
    t.segundo = h;
    t.segundo = h + 2;
    t.n = {1,1};

    lista <Tiempo> [2] arrayTiempo = {t};

    DiaSemana dia1 = Lunes;
    Frutas fruta1 = Pera;
    DiaSemana fruta = Pera;
    lista <lista <Frutas> [2]> [2] arrayFrutas = {{Pera}};

    lista <Frutas> [2] arrayFrutas1 = {Pera};   


    paraCada (entero b = 0; b < 2; b = b + 1){
        si(a == verdad){
            si(Pera){
                entero entIf = 1;
            }
            sino{
                entero elsif = 1;
            }
        }
        sino{
            DiaSemana dia2 = Martes;
            mientras(3 <= 2 yy a oo 3 > 4 yy h < 1){
                entero entWhile = 2;
            }
        }
    }

    paraCada (buleano b = verdad; b  oo 3 < 2; b = b + 1){
     selecciona (b){
        caso 0: 
            si(a > 1) {
                c = verdad;
            }
        caso 1: 
            c = mentira;
            Â¡para!;
        caso 2:
        porDefecto: a = 3;
    }
    }

}