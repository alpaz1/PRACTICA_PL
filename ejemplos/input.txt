#incluir "hola.txt"
#incluir "pruebaaa.h"

enum DiaSemana { Lunes, Martes, Miercoles, Jueves, Viernes, Sabado, Domingo};
enum Resultado {accepted, timelimit, wrongAnswer};
alias matriz = lista <lista <DiaSemana>[2]> [3];
alias alejandro = flotante;

// Estructura para representar el tiempo
estructura Tiempo{
    entero hora;
    entero minuto;
    flotante segundo;
};

// Clase personalizada
publico clase miClase{
    privado entero a = 1;
    privado lista <lista <DiaSemana>[2]> [3] miAray = {{Lunes,Martes}};
    publico Tiempo tiempo;
    
    publico miClase(Tiempo& t, entero ab){
        tiempo = t;
        DiaSemana d = Martes;
        miAray[1][2] = Jueves;
    }

    privado void fun(buleano b){
        b = mentira;
    }
}

lista <Tiempo> [2] a;

entero x_a = 5 + 1;
buleano encontrado = verdad yy mentira oo mentira;

buleano prueba(entero a, entero& b, lista <lista <DiaSemana>[]>[] &miArray){
    mientras (a == b){
        paraCada(entero i = 0; i < b; i = i + 1){
            b = b + 1;
        }
    }
    devuelve a;
    devuelve b;
}

buleano pruebaConReturn(entero a, entero& b){
    mientras (a == b){
        paraCada(entero i = 0; i < b; i = i + 1){
            b = b + 1;
        }
    }
    
    selecciona (b){
        caso 0: 
            si(a > 1) {
                c = verdad;
            }
        caso 1: 
            c = mentira;
            Â¡para!;
        caso 2:
        porDefecto: a = 3;
    }

    devuelve a;
}

principal(){

    Tiempo t;

    miClase mc = nuevo miClase(t,a);

    matriz m = {{Viernes, Sabado}, {Sabado,Domingo}, {Domingo, Viernes}};

    lista <lista <entero>[2]>[3] miAray = {{1,2}};
    entero i = 0;

    si (mentira == mentira){
        x_a = 1;
    }

    sino{
        paraCada (; i < 1 ; i = i + 1){
            buleano a = verdad;
        }
    }
    lista <lista < lista<entero>[3]>[3]>[3] c;
    lista <entero> [3] b;
    entero* n;
    Tiempo* t1;
    t.segundo = 60;
    entero z = t.segundo;
    a[1] = verdad;
    a[i] = c[2][1][2];
    b = c[1][1];
    t.segundo = t1.minuto;
    c[1][2][2] = t.minuto;
    t.minuto = c[1][2][2];

    @m = 1;
    @m = @n;
    entero x = 5 + 2*3 - 1;
    mientras (a > 1){
        x = x + 1;
    }
}